---
- name: Ensure folder {{ nginx_folder }} exists
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_ssh_user }}"
    mode: '0755'
  with_items:
    - "{{ nginx_folder }}"
    - "{{ nginx_folder_temp }}"

- name: Copy files for nginx container to temp folder
  ansible.builtin.copy:
    src: "{{ item.path }}"
    dest: "{{ nginx_folder_temp }}/{{ item.path | basename }}"
    owner: "{{ ansible_ssh_user }}"
    mode: '0644'
  with_community.general.filetree: '{{ role_path }}/files'

- name: Validate internal nginx config using nginx -t
  command: docker run --rm -v {{ nginx_folder_temp }}/nginx_internal.conf:/etc/nginx/conf.d/default.conf nginx nginx -t
  args:
    chdir: "{{ nginx_folder_temp }}"
  register: nginx_internal_validation
  changed_when: false
  ignore_errors: true

- name: Validate public nginx config using nginx -t
  command: docker run --rm -v {{ nginx_folder_temp }}/nginx_public.conf:/etc/nginx/conf.d/default.conf nginx nginx -t
  args:
    chdir: "{{ nginx_folder_temp }}"
  register: nginx_public_validation
  changed_when: false
  ignore_errors: true

- name: Ensure nginx config passed validation
  assert:
    that:
      - nginx_internal_validation.rc == 0
      - nginx_public_validation.rc == 0
    fail_msg: "One or more nginx configs did not pass validation"
    success_msg: "Nginx configs passed validation"

- name: Copy files for nginx container to real folder
  ansible.builtin.copy:
    src: "{{ item.path }}"
    dest: "{{ nginx_folder }}/{{ item.path | basename }}"
    owner: "{{ ansible_ssh_user }}"
    mode: '0644'
  with_community.general.filetree: '{{ role_path }}/files'

- name: docker compose down
  command: "docker compose down"
  args:
    chdir: "{{ nginx_folder }}"
  register: output
  ignore_errors: true

- name: Show docker compose output
  ansible.builtin.debug:
    var: output

- name: docker compose up -d --quiet-pull
  command: "docker compose up -d --quiet-pull"
  args:
    chdir: "{{ nginx_folder }}"
  register: output

- name: Show docker compose output
  ansible.builtin.debug:
    var: output

- name: Wait for nginx-internal to start
  wait_for:
    port: 80
    delay: 5
    timeout: 30
    state: started
  ignore_errors: true
  register: internal_wait_output

- name: Wait for nginx-public to start
  wait_for:
    port: 8000
    delay: 5
    timeout: 30
    state: started
  ignore_errors: true
  register: public_wait_output

- name: Fetch nginx-internal container logs if nginx did not start
  command: "docker logs nginx-proxy"
  args:
    chdir: "{{ nginx_folder }}"
  register: logs
  ignore_errors: true
  when: internal_wait_output.failed

- name: Show nginx-internal container logs if nginx did not start
  ansible.builtin.debug:
    var: logs
  when: internal_wait_output.failed

- name: Fetch nginx-public container logs if nginx did not start
  command: "docker logs nginx-proxy"
  args:
    chdir: "{{ nginx_folder }}"
  register: logs
  ignore_errors: true
  when: public_wait_output.failed

- name: Show nginx-public container logs if nginx did not start
  ansible.builtin.debug:
    var: logs
  when: public_wait_output.failed

- name: Delete temp folder
  ansible.builtin.file:
    path: "{{ nginx_folder_temp }}"
    state: absent
